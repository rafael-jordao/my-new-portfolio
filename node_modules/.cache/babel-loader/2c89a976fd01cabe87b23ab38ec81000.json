{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.sourcemapCodec = {}));\n})(this, function (exports) {\n  'use strict';\n\n  const comma = ','.charCodeAt(0);\n  const semicolon = ';'.charCodeAt(0);\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  const intToChar = new Uint8Array(64); // 64 possible chars.\n\n  const charToInteger = new Uint8Array(128); // z is 122 in ASCII\n\n  for (let i = 0; i < chars.length; i++) {\n    const c = chars.charCodeAt(i);\n    charToInteger[c] = i;\n    intToChar[i] = c;\n  } // Provide a fallback for older environments.\n\n\n  const td = typeof TextDecoder !== 'undefined' ? new TextDecoder() : typeof Buffer !== 'undefined' ? {\n    decode(buf) {\n      const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n      return out.toString();\n    }\n\n  } : {\n    decode(buf) {\n      let out = '';\n\n      for (let i = 0; i < buf.length; i++) {\n        out += String.fromCharCode(buf[i]);\n      }\n\n      return out;\n    }\n\n  };\n\n  function decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let line = [];\n    let sorted = true;\n    let lastCol = 0;\n\n    for (let i = 0; i < mappings.length;) {\n      const c = mappings.charCodeAt(i);\n\n      if (c === comma) {\n        i++;\n      } else if (c === semicolon) {\n        state[0] = lastCol = 0;\n        if (!sorted) sort(line);\n        sorted = true;\n        decoded.push(line);\n        line = [];\n        i++;\n      } else {\n        i = decodeInteger(mappings, i, state, 0); // generatedCodeColumn\n\n        const col = state[0];\n        if (col < lastCol) sorted = false;\n        lastCol = col;\n\n        if (!hasMoreSegments(mappings, i)) {\n          line.push([col]);\n          continue;\n        }\n\n        i = decodeInteger(mappings, i, state, 1); // sourceFileIndex\n\n        i = decodeInteger(mappings, i, state, 2); // sourceCodeLine\n\n        i = decodeInteger(mappings, i, state, 3); // sourceCodeColumn\n\n        if (!hasMoreSegments(mappings, i)) {\n          line.push([col, state[1], state[2], state[3]]);\n          continue;\n        }\n\n        i = decodeInteger(mappings, i, state, 4); // nameIndex\n\n        line.push([col, state[1], state[2], state[3], state[4]]);\n      }\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    return decoded;\n  }\n\n  function decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n\n    do {\n      const c = mappings.charCodeAt(pos++);\n      integer = charToInteger[c];\n      value |= (integer & 31) << shift;\n      shift += 5;\n    } while (integer & 32);\n\n    const shouldNegate = value & 1;\n    value >>>= 1;\n\n    if (shouldNegate) {\n      value = -0x80000000 | -value;\n    }\n\n    state[j] += value;\n    return pos;\n  }\n\n  function hasMoreSegments(mappings, i) {\n    if (i >= mappings.length) return false;\n    const c = mappings.charCodeAt(i);\n    if (c === comma || c === semicolon) return false;\n    return true;\n  }\n\n  function sort(line) {\n    line.sort(sortComparator);\n  }\n\n  function sortComparator(a, b) {\n    return a[0] - b[0];\n  }\n\n  function encode(decoded) {\n    const state = new Int32Array(5);\n    let buf = new Uint8Array(1024);\n    let pos = 0;\n\n    for (let i = 0; i < decoded.length; i++) {\n      const line = decoded[i];\n\n      if (i > 0) {\n        buf = reserve(buf, pos, 1);\n        buf[pos++] = semicolon;\n      }\n\n      if (line.length === 0) continue;\n      state[0] = 0;\n\n      for (let j = 0; j < line.length; j++) {\n        const segment = line[j]; // We can push up to 5 ints, each int can take at most 7 chars, and we\n        // may push a comma.\n\n        buf = reserve(buf, pos, 36);\n        if (j > 0) buf[pos++] = comma;\n        pos = encodeInteger(buf, pos, state, segment, 0); // generatedCodeColumn\n\n        if (segment.length === 1) continue;\n        pos = encodeInteger(buf, pos, state, segment, 1); // sourceFileIndex\n\n        pos = encodeInteger(buf, pos, state, segment, 2); // sourceCodeLine\n\n        pos = encodeInteger(buf, pos, state, segment, 3); // sourceCodeColumn\n\n        if (segment.length === 4) continue;\n        pos = encodeInteger(buf, pos, state, segment, 4); // nameIndex\n      }\n    }\n\n    return td.decode(buf.subarray(0, pos));\n  }\n\n  function reserve(buf, pos, count) {\n    if (buf.length > pos + count) return buf;\n    const swap = new Uint8Array(buf.length * 2);\n    swap.set(buf);\n    return swap;\n  }\n\n  function encodeInteger(buf, pos, state, segment, j) {\n    const next = segment[j];\n    let num = next - state[j];\n    state[j] = next;\n    num = num < 0 ? -num << 1 | 1 : num << 1;\n\n    do {\n      let clamped = num & 0b011111;\n      num >>>= 5;\n      if (num > 0) clamped |= 0b100000;\n      buf[pos++] = intToChar[clamped];\n    } while (num > 0);\n\n    return pos;\n  }\n\n  exports.decode = decode;\n  exports.encode = encode;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"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","names":["comma","charCodeAt","semicolon","chars","intToChar","Uint8Array","charToInteger","i","length","c","td","TextDecoder","Buffer","decode","buf","out","from","buffer","byteOffset","byteLength","toString","String","fromCharCode","mappings","state","Int32Array","decoded","line","sorted","lastCol","sort","push","decodeInteger","col","hasMoreSegments","pos","j","value","shift","integer","shouldNegate","sortComparator","a","b","encode","reserve","segment","encodeInteger","subarray","count","swap","set","next","num","clamped"],"sources":["../../src/sourcemap-codec.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}